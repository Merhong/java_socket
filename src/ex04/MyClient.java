package ex04;import java.io.BufferedReader;import java.io.BufferedWriter;import java.io.IOException;import java.io.InputStreamReader;import java.io.OutputStreamWriter;import java.io.PrintWriter;import java.net.Socket;import java.nio.charset.StandardCharsets;import java.util.Scanner;/** * 클라이언트는 Read 버퍼를 만들고 서버는 Write 버퍼를 추가로 만든다. */public class MyClient {    public MyClient() throws IOException {        // 1. 서버 연결 (localhost == 127.0.0.1) ==> IP주소 : 192.168.200.115        // 10, 172, 192로 시작하는 IP는 사설 IP임        Socket socket = new Socket("127.0.0.1", 10000); // 루프백 주소(자기자신)        // 2. 버퍼 생성(송,수신선 만듬) 서버쪽으로 메시지 전송        // BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(System.out); // System.out을 -> socket으로 바꿈        BufferedWriter writer = new BufferedWriter(            new OutputStreamWriter(socket.getOutputStream(), StandardCharsets.UTF_8));        // 키보드 Scanner, 요청을 위한 PrintWriter(Write) 버퍼 request, 응답 온 메시지를 받기위한 Read 버퍼 response        Scanner keyboard = new Scanner(System.in);        PrintWriter request = new PrintWriter(socket.getOutputStream(), true,            StandardCharsets.UTF_8);        BufferedReader response = new BufferedReader(            new InputStreamReader(socket.getInputStream(), StandardCharsets.UTF_8));        System.out.println("서버에 보낼 메시지를 작성하고 엔터를 누르세요.");        // 통신 연결 유지        while (true) {            // 3. 키보드로부터 입력 대기            String requestBody = keyboard.nextLine();   // 자체적으로 while을 돌리며 키보드 입력 대기중            // 4. 서버 요청            request.println(requestBody);               // println은 \n을 포함하고 있어서 메시지 종료 시점을 알려줌            // 5. 서버로부터 응답            String responseBody = response.readLine();            System.out.println("서버로부터 온 메시지 : " + responseBody);        }    }    public static void main(String[] args) {        try {            new MyClient();        } catch (Exception e) {            e.printStackTrace();        }    }}